// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.11.2
// source: proto/favorite/favorite.proto

package favorite

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FavoriteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id       uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Created  int64    `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Updated  int64    `protobuf:"varint,4,opt,name=updated,proto3" json:"updated,omitempty"`
	Name     string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Owner    string   `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	Remark   string   `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	Creator  string   `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
	Operator string   `protobuf:"bytes,9,opt,name=operator,proto3" json:"operator,omitempty"`
	Cover    string   `protobuf:"bytes,10,opt,name=cover,proto3" json:"cover,omitempty"`
	Entities []string `protobuf:"bytes,11,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *FavoriteInfo) Reset() {
	*x = FavoriteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_favorite_favorite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteInfo) ProtoMessage() {}

func (x *FavoriteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_favorite_favorite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteInfo.ProtoReflect.Descriptor instead.
func (*FavoriteInfo) Descriptor() ([]byte, []int) {
	return file_proto_favorite_favorite_proto_rawDescGZIP(), []int{0}
}

func (x *FavoriteInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *FavoriteInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FavoriteInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *FavoriteInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *FavoriteInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FavoriteInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *FavoriteInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FavoriteInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *FavoriteInfo) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *FavoriteInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FavoriteInfo) GetEntities() []string {
	if x != nil {
		return x.Entities
	}
	return nil
}

type ReqFavoriteAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner    string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Remark   string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Cover    string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Type     int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Operator string `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *ReqFavoriteAdd) Reset() {
	*x = ReqFavoriteAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_favorite_favorite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFavoriteAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFavoriteAdd) ProtoMessage() {}

func (x *ReqFavoriteAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_favorite_favorite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFavoriteAdd.ProtoReflect.Descriptor instead.
func (*ReqFavoriteAdd) Descriptor() ([]byte, []int) {
	return file_proto_favorite_favorite_proto_rawDescGZIP(), []int{1}
}

func (x *ReqFavoriteAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqFavoriteAdd) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ReqFavoriteAdd) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ReqFavoriteAdd) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqFavoriteAdd) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqFavoriteAdd) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type ReqFavoriteUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark   string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Cover    string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Operator string `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *ReqFavoriteUpdate) Reset() {
	*x = ReqFavoriteUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_favorite_favorite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFavoriteUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFavoriteUpdate) ProtoMessage() {}

func (x *ReqFavoriteUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_favorite_favorite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFavoriteUpdate.ProtoReflect.Descriptor instead.
func (*ReqFavoriteUpdate) Descriptor() ([]byte, []int) {
	return file_proto_favorite_favorite_proto_rawDescGZIP(), []int{2}
}

func (x *ReqFavoriteUpdate) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqFavoriteUpdate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqFavoriteUpdate) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ReqFavoriteUpdate) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqFavoriteUpdate) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type ReplyFavoriteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *FavoriteInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Status *ReplyStatus  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyFavoriteInfo) Reset() {
	*x = ReplyFavoriteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_favorite_favorite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyFavoriteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyFavoriteInfo) ProtoMessage() {}

func (x *ReplyFavoriteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_favorite_favorite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyFavoriteInfo.ProtoReflect.Descriptor instead.
func (*ReplyFavoriteInfo) Descriptor() ([]byte, []int) {
	return file_proto_favorite_favorite_proto_rawDescGZIP(), []int{3}
}

func (x *ReplyFavoriteInfo) GetInfo() *FavoriteInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReplyFavoriteInfo) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReplyFavoriteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List   []*FavoriteInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Status *ReplyStatus    `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyFavoriteList) Reset() {
	*x = ReplyFavoriteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_favorite_favorite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyFavoriteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyFavoriteList) ProtoMessage() {}

func (x *ReplyFavoriteList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_favorite_favorite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyFavoriteList.ProtoReflect.Descriptor instead.
func (*ReplyFavoriteList) Descriptor() ([]byte, []int) {
	return file_proto_favorite_favorite_proto_rawDescGZIP(), []int{4}
}

func (x *ReplyFavoriteList) GetList() []*FavoriteInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ReplyFavoriteList) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReqFavoriteEntities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Operator string   `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Entities []string `protobuf:"bytes,3,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *ReqFavoriteEntities) Reset() {
	*x = ReqFavoriteEntities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_favorite_favorite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFavoriteEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFavoriteEntities) ProtoMessage() {}

func (x *ReqFavoriteEntities) ProtoReflect() protoreflect.Message {
	mi := &file_proto_favorite_favorite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFavoriteEntities.ProtoReflect.Descriptor instead.
func (*ReqFavoriteEntities) Descriptor() ([]byte, []int) {
	return file_proto_favorite_favorite_proto_rawDescGZIP(), []int{5}
}

func (x *ReqFavoriteEntities) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqFavoriteEntities) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *ReqFavoriteEntities) GetEntities() []string {
	if x != nil {
		return x.Entities
	}
	return nil
}

type ReplyFavoriteEntities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string       `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Entities []string     `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
	Status   *ReplyStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyFavoriteEntities) Reset() {
	*x = ReplyFavoriteEntities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_favorite_favorite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyFavoriteEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyFavoriteEntities) ProtoMessage() {}

func (x *ReplyFavoriteEntities) ProtoReflect() protoreflect.Message {
	mi := &file_proto_favorite_favorite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyFavoriteEntities.ProtoReflect.Descriptor instead.
func (*ReplyFavoriteEntities) Descriptor() ([]byte, []int) {
	return file_proto_favorite_favorite_proto_rawDescGZIP(), []int{6}
}

func (x *ReplyFavoriteEntities) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReplyFavoriteEntities) GetEntities() []string {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *ReplyFavoriteEntities) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_proto_favorite_favorite_proto protoreflect.FileDescriptor

var file_proto_favorite_favorite_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x2f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e,
	0x02, 0x0a, 0x0c, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x98, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x7e, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x7e, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x5f, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x7c, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0xc4, 0x05, 0x0a, 0x0f, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x20, 0x2e,
	0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x1a,
	0x23, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65,
	0x12, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x23, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x23, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x6f,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x1d,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1b, 0x2e,
	0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x25,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x27, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x27, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0e, 0x53, 0x75,
	0x62, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x6f,
	0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x27, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_favorite_favorite_proto_rawDescOnce sync.Once
	file_proto_favorite_favorite_proto_rawDescData = file_proto_favorite_favorite_proto_rawDesc
)

func file_proto_favorite_favorite_proto_rawDescGZIP() []byte {
	file_proto_favorite_favorite_proto_rawDescOnce.Do(func() {
		file_proto_favorite_favorite_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_favorite_favorite_proto_rawDescData)
	})
	return file_proto_favorite_favorite_proto_rawDescData
}

var file_proto_favorite_favorite_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_favorite_favorite_proto_goTypes = []interface{}{
	(*FavoriteInfo)(nil),          // 0: omo.msp.Favorite.FavoriteInfo
	(*ReqFavoriteAdd)(nil),        // 1: omo.msp.Favorite.ReqFavoriteAdd
	(*ReqFavoriteUpdate)(nil),     // 2: omo.msp.Favorite.ReqFavoriteUpdate
	(*ReplyFavoriteInfo)(nil),     // 3: omo.msp.Favorite.ReplyFavoriteInfo
	(*ReplyFavoriteList)(nil),     // 4: omo.msp.Favorite.ReplyFavoriteList
	(*ReqFavoriteEntities)(nil),   // 5: omo.msp.Favorite.ReqFavoriteEntities
	(*ReplyFavoriteEntities)(nil), // 6: omo.msp.Favorite.ReplyFavoriteEntities
	(*ReplyStatus)(nil),           // 7: omo.msp.Favorite.ReplyStatus
	(*RequestInfo)(nil),           // 8: omo.msp.Favorite.RequestInfo
	(*ReplyInfo)(nil),             // 9: omo.msp.Favorite.ReplyInfo
}
var file_proto_favorite_favorite_proto_depIdxs = []int32{
	0,  // 0: omo.msp.Favorite.ReplyFavoriteInfo.info:type_name -> omo.msp.Favorite.FavoriteInfo
	7,  // 1: omo.msp.Favorite.ReplyFavoriteInfo.status:type_name -> omo.msp.Favorite.ReplyStatus
	0,  // 2: omo.msp.Favorite.ReplyFavoriteList.list:type_name -> omo.msp.Favorite.FavoriteInfo
	7,  // 3: omo.msp.Favorite.ReplyFavoriteList.status:type_name -> omo.msp.Favorite.ReplyStatus
	7,  // 4: omo.msp.Favorite.ReplyFavoriteEntities.status:type_name -> omo.msp.Favorite.ReplyStatus
	1,  // 5: omo.msp.Favorite.FavoriteService.AddOne:input_type -> omo.msp.Favorite.ReqFavoriteAdd
	8,  // 6: omo.msp.Favorite.FavoriteService.GetOne:input_type -> omo.msp.Favorite.RequestInfo
	8,  // 7: omo.msp.Favorite.FavoriteService.GetList:input_type -> omo.msp.Favorite.RequestInfo
	2,  // 8: omo.msp.Favorite.FavoriteService.UpdateBase:input_type -> omo.msp.Favorite.ReqFavoriteUpdate
	8,  // 9: omo.msp.Favorite.FavoriteService.RemoveOne:input_type -> omo.msp.Favorite.RequestInfo
	5,  // 10: omo.msp.Favorite.FavoriteService.UpdateEntities:input_type -> omo.msp.Favorite.ReqFavoriteEntities
	8,  // 11: omo.msp.Favorite.FavoriteService.AppendEntity:input_type -> omo.msp.Favorite.RequestInfo
	8,  // 12: omo.msp.Favorite.FavoriteService.SubtractEntity:input_type -> omo.msp.Favorite.RequestInfo
	3,  // 13: omo.msp.Favorite.FavoriteService.AddOne:output_type -> omo.msp.Favorite.ReplyFavoriteInfo
	3,  // 14: omo.msp.Favorite.FavoriteService.GetOne:output_type -> omo.msp.Favorite.ReplyFavoriteInfo
	4,  // 15: omo.msp.Favorite.FavoriteService.GetList:output_type -> omo.msp.Favorite.ReplyFavoriteList
	3,  // 16: omo.msp.Favorite.FavoriteService.UpdateBase:output_type -> omo.msp.Favorite.ReplyFavoriteInfo
	9,  // 17: omo.msp.Favorite.FavoriteService.RemoveOne:output_type -> omo.msp.Favorite.ReplyInfo
	6,  // 18: omo.msp.Favorite.FavoriteService.UpdateEntities:output_type -> omo.msp.Favorite.ReplyFavoriteEntities
	6,  // 19: omo.msp.Favorite.FavoriteService.AppendEntity:output_type -> omo.msp.Favorite.ReplyFavoriteEntities
	6,  // 20: omo.msp.Favorite.FavoriteService.SubtractEntity:output_type -> omo.msp.Favorite.ReplyFavoriteEntities
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_favorite_favorite_proto_init() }
func file_proto_favorite_favorite_proto_init() {
	if File_proto_favorite_favorite_proto != nil {
		return
	}
	file_proto_favorite_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_favorite_favorite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_favorite_favorite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFavoriteAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_favorite_favorite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFavoriteUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_favorite_favorite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyFavoriteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_favorite_favorite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyFavoriteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_favorite_favorite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFavoriteEntities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_favorite_favorite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyFavoriteEntities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_favorite_favorite_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_favorite_favorite_proto_goTypes,
		DependencyIndexes: file_proto_favorite_favorite_proto_depIdxs,
		MessageInfos:      file_proto_favorite_favorite_proto_msgTypes,
	}.Build()
	File_proto_favorite_favorite_proto = out.File
	file_proto_favorite_favorite_proto_rawDesc = nil
	file_proto_favorite_favorite_proto_goTypes = nil
	file_proto_favorite_favorite_proto_depIdxs = nil
}
